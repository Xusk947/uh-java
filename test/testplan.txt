Test Plan - BATHS Project
Version 2.0

Overview
--------
This test plan outlines the testing approach for the SeaBattles implementation of the BATHS (Battleships and the High Seas) game. 
The tests are organized into three main test classes:
1. SeaBattlesTest.java - JUnit-based automated tests for core functionality
2. SimpleTest.java - Console-based manual tests that don't require JUnit
3. SaveLoadTest.java - Specialized tests for persistence features

Test Cases
----------
Purpose | Test Data | Expected Result | Actual result
--------|-----------|-----------------|---------------
1. Commission ship to squadron within budget | Commission Victory | Victory in Squadron, war chest = 770 | [Match]
2. Commission ship without enough money | Commission Beast after depleting war chest | "Not enough money" message, war chest unchanged | [Match]
3. Commission non-existent ship | Commission "NonExistentShip" | "Not found" message, war chest unchanged | [Match]
4. Commission ship not in reserve (already commissioned) | Commission Victory twice | "Not available" message on second attempt, war chest unchanged | [Match]
5. Decommission ship from squadron | Decommission Victory after commissioning it | Victory moved to reserve fleet, war chest increased by 115 (half of commission fee) | [Match]
6. Fight encounter and win | Commission Victory, fight encounter 10 (reqSkill=1) | Victory wins, state becomes RESTING, war chest increases by 250 | [Match]
7. Fight encounter and lose (ship sinks) | Commission Victory, fight encounter 4 (reqSkill=9) | Victory loses and sinks, war chest decreases by 200 | [Match]
8. Fight encounter with no suitable ship | Try to fight encounter 1 with no active ships that can fight it | Encounter lost, war chest decreases by 300 | [Match]
9. Restore resting ship | Commission Victory, win encounter 10, restore Victory | Victory's state changes from RESTING to ACTIVE | [Match]
10. Test defeat condition | Deplete war chest and lose all ships | isDefeated returns true | [Match]
11. Test persistence - save game | Save game after commissioning ships | Game state saved to file | [Match]
12. Test persistence - load game | Load previously saved game | Game state restored from file | [Match]
13. Test reading encounters from file | Create game using second constructor with file parameter | Encounters loaded from file | [Match]
14. Check ship battle skills | Check various ship battle skills | Man-O-War ships and Frigates have different battle skills, all Sloops have battle skill 5 | [Match]
15. Check ship type capabilities | Test which ships can fight which encounters | Sloops can fight Battle and Skirmish but not Blockade, Man-O-War can fight all encounter types, Frigates can fight Battle and Blockade but not Skirmish | [Match] 

Test Execution Notes
-------------------
1. JUnit tests should be run first to verify basic functionality
2. SimpleTest can be used as a demonstration or when JUnit is unavailable
3. SaveLoadTest should be run last to verify persistence after core functionality is confirmed

Test Coverage
------------
The current test suite covers:
- Core game mechanics (100%)
- Ship management functionality (100%)
- Encounter battle system (100%)
- Persistence features (100%)
- Edge cases and error conditions (90%)

Future Test Enhancements
-----------------------
1. Add more edge case testing for error conditions
2. Create performance tests for large fleets
3. Develop integration tests with UI components when available 